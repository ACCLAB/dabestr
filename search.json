[{"path":[]},{"path":"https://acclab.github.io/dabestr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://acclab.github.io/dabestr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://acclab.github.io/dabestr/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://acclab.github.io/dabestr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://acclab.github.io/dabestr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team maiyishan@u.duke.nus.edu. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://acclab.github.io/dabestr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://acclab.github.io/dabestr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dabestr","title":"Contributing to dabestr","text":"guide divided three main pieces: Filing bug issue. Filing feature request issue. Suggesting change via pull request. Please note dabestr released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://acclab.github.io/dabestr/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to dabestr","text":"Ensure bug already reported searching Issues. sure also check bug hasn’t addressed closed issue. bug isn’t addressed, open new one. sure include title clear description, minimally reproducible code sample demonstrating expected behavior occurring.","code":""},{"path":"https://acclab.github.io/dabestr/CONTRIBUTING.html","id":"feature-requests","dir":"","previous_headings":"","what":"Feature Requests","title":"Contributing to dabestr","text":"may suggest opening issue adding Enhancement tag.","code":""},{"path":"https://acclab.github.io/dabestr/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to dabestr","text":"contribute change dabestr, follow steps: Create fork make changes. Issue PR dev branch dabestr. Discuss PR. Iterate either accept PR decide ’s good fit dabestr. steps described detail . ’re familiar git github, please start reading http://r-pkgs..co.nz/git.html","code":""},{"path":"https://acclab.github.io/dabestr/CONTRIBUTING.html","id":"guidelines","dir":"","previous_headings":"Pull requests","what":"Guidelines","title":"Contributing to dabestr","text":"Clarity. Ensure PR description clearly describes problem solution. Include relevant issue number applicable. Use dabestr coding style. dabestr currently following official tidyverse style. may choose using styler package running following code submitting: ’re adding new parameters new function, ’ll also need document roxygen. Make sure re-run devtools::document() code submitting. fixing bug adding new feature, please add testthat unit test. PRs require review approval least one member dabestr development team merge. Lastly, dabestr community tool estimation statistics analysis. look forward robust elegant data visualizations !","code":"# install.packages(\"styler\") styler::style_pkg()"},{"path":"https://acclab.github.io/dabestr/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to dabestr","text":"Contributing guide adapted ggplot2’s CONTRIBUTING.md.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://acclab.github.io/dabestr/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2023 dabestr authors  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://acclab.github.io/dabestr/articles/datasets.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Sample Datasets","text":"","code":"data(\"non_proportional_data\")  data(\"proportional_data\")  data(\"minimeta_data\")  data(\"deltadelta_data\")"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Controlling Plot Aesthetics","text":"point, assume already obtained dabest_effectsize_obj. add adjust specific plot components, simply add argument dabest_plot() function.","code":"dabest_plot(   dabest_effectsize_obj,   float_contrast = TRUE,   plot_component = \"adjustment_value\" )"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"adjusting-text","dir":"Articles","previous_headings":"","what":"Adjusting Text","title":"Controlling Plot Aesthetics","text":"text elements estimation plot can adjusted. includes value, size even removal text elements completely.","code":""},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"size","dir":"Articles","previous_headings":"Adjusting Text","what":"Size","title":"Controlling Plot Aesthetics","text":"following parameters responsible adjusting size text elements. swarm_x_text: Default 11. Numeric value determining font size x-axis swarm plot. swarm_y_text: Default 15. Numeric value determining font size y-axis swarm plot. contrast_x_text: Default 11. Numeric value determining font size x-axis contrast plot. contrast_y_text: Default 15. Numeric value determining font size y-axis contrast plot.","code":"dabest_plot(   dabest_twogroup_obj.mean_diff,   float_contrast = TRUE,   swarm_x_text = 30,   swarm_y_text = 1,   contrast_x_text = 30,   contrast_y_text = 5 )"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"content","dir":"Articles","previous_headings":"Adjusting Text","what":"Content","title":"Controlling Plot Aesthetics","text":"following parameters responsible adjusting content text elements. swarm_label: Default “value” “proportion success” proportion plots. Label y-axis swarm plot. contrast_label: Default “effect size”, based effect sizes given effect_size(). Label y-axis contrast plot. delta2_label: Default NULL. Label y-label delta-delta plot.","code":"dabest_plot(   dabest_twogroup_obj.mean_diff,   float_contrast = TRUE,   swarm_label = \"I love estimation statistics.\",   contrast_label = \"I love it more than you do!\" )"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"adjusting-visual-elements","dir":"Articles","previous_headings":"","what":"Adjusting Visual Elements","title":"Controlling Plot Aesthetics","text":"Visual elements refer shapes, lines, symbols visual representations convey data relationship plot. Many elements can adjusted dabestr.","code":""},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"markers","dir":"Articles","previous_headings":"Adjusting Visual Elements","what":"Markers","title":"Controlling Plot Aesthetics","text":"following parameters responsible adjusting properties various markers plot. raw_marker_size Default 1.5. Numeric value determining size points used swarm plot. raw_marker_alpha Default 1. Numeric value determining transparency points swarm plot. raw_bar_width Default 0.3. Numeric value determining width bar sankey diagram. raw_marker_spread Default 2. distance points swarm plot. raw_marker_side_shift Default 0. horizontal distance swarm plot points moved direction asymmetric_side.. tufte_size Default 0.8. Numeric value determining size tufte line swarm plot. es_marker_size Default 0.5. Numeric value determining size points used delta plot. es_line_size Default 0.8. Numeric value determining size ci line delta plot.","code":"A <- dabest_plot(dabest_twogroup_obj.mean_diff,   float_contrast = TRUE,   swarm_label = \"\", contrast_label = \"\",   raw_marker_size = 1, raw_marker_alpha = 1 ) B <- dabest_plot(dabest_twogroup_obj.mean_diff,   float_contrast = TRUE,   swarm_label = \"\", contrast_label = \"\",   raw_marker_size = 2, raw_marker_alpha = 0.5 )  cowplot::plot_grid(   plotlist = list(A, B),   nrow = 1,   ncol = 2,   labels = \"AUTO\" )"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"axes","dir":"Articles","previous_headings":"Adjusting Visual Elements","what":"Axes","title":"Controlling Plot Aesthetics","text":"following parameters responsible adjusting y-axis limits rawdata axes contrast axes plot. adjusting range, gives rise effect zooming plot. swarm_ylim Default NULL. Vector containing y-limits swarm plot. contrast_ylim Default NULL. Vector containing y-limits delta plot. delta2_ylim Default NULL. Vector containing y-limits delta-delta plot. effect size qualitatively inverted (ie. smaller value better outcome), can invert vector passed contrast_ylim.","code":"dabest_plot(dabest_multigroup_obj.mean_diff,   float_contrast = FALSE,   contrast_label = \"More negative is better!\",   swarm_ylim = c(1, 5), contrast_ylim = c(0.7, -1.2) )"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"palettes","dir":"Articles","previous_headings":"Adjusting Visual Elements","what":"Palettes","title":"Controlling Plot Aesthetics","text":"following parameters responsible adjusting plot palettes plot. custom_palette Default “d3”. String. following palettes available use: npg, aaas, nejm, lancet, jama, jco, ucscgb, d3, locuszoom, igv, cosmic, uchicago, brewer, ordinal, viridis_d.","code":"npg <- dabest_plot(dabest_unpaired_props.mean_diff,   swarm_label = \"\", contrast_label = \"\",   custom_palette = \"npg\" ) nejm <- dabest_plot(dabest_unpaired_props.mean_diff,   swarm_label = \"\", contrast_label = \"\",   custom_palette = \"nejm\" ) jama <- dabest_plot(dabest_unpaired_props.mean_diff,   swarm_label = \"\", contrast_label = \"\",   custom_palette = \"jama\" ) locuszoom <- dabest_plot(dabest_unpaired_props.mean_diff,   swarm_label = \"\", contrast_label = \"\",   custom_palette = \"locuszoom\" )  cowplot::plot_grid(   plotlist = list(npg, nejm, jama, locuszoom),   nrow = 2,   ncol = 2 )"},{"path":"https://acclab.github.io/dabestr/articles/plot_aesthetics.html","id":"misc","dir":"Articles","previous_headings":"Adjusting Visual Elements","what":"Misc","title":"Controlling Plot Aesthetics","text":"sankey Default TRUE. Boolean value determining flows bar charts plotted.  flow Default TRUE. Boolean value determining whether bars plotted pairs.  asymmetric_side Default “right”. Can either “right” “left”. Controls side swarm points shown.  show_delta2 Default FALSE. Boolean value determining delta-delta plot shown. show_mini_meta Default FALSE. Boolean value determining weighted average plot shown. False, resulting graph identical multiple two-groups plot. show_zero_dot Default TRUE. Boolean value determining dot zero line effect size control-control group. show_baseline_ec Default FALSE. Boolean value determining whether baseline curve shown.","code":"dabest_plot(dabest_paired_props.mean_diff, sankey = FALSE, raw_bar_width = 0.15) dabest_plot(dabest_paired_props.mean_diff, flow = FALSE, raw_bar_width = 0.15) right <- dabest_plot(dabest_twogroup_obj.mean_diff,   float_contrast = FALSE,   swarm_label = \"\", contrast_label = \"\",   asymmetric_side = \"right\" ) left <- dabest_plot(dabest_twogroup_obj.mean_diff,   float_contrast = FALSE,   swarm_label = \"\", contrast_label = \"\",   asymmetric_side = \"left\" )  cowplot::plot_grid(   plotlist = list(right, left),   nrow = 1,   ncol = 2 ) dabest_plot(dabest_multigroup_obj.mean_diff,   float_contrast = FALSE,   show_baseline_ec = TRUE )"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"create-dataset-for-demo","dir":"Articles","previous_headings":"","what":"Create dataset for demo","title":"Tutorial: Basics","text":", create dataset illustrate dabest functions. dataset, column corresponds group observations. Note 9 groups (3 Control samples 6 Test samples). dataset also non-numerical column indicating gender, another column indicating identity observation. known ‘long’ dataset. See writeup details.","code":"set.seed(12345) # Fix the seed so the results are replicable. # pop_size = 10000 # Size of each population. N <- 20  # Create samples c1 <- rnorm(N, mean = 3, sd = 0.4) c2 <- rnorm(N, mean = 3.5, sd = 0.75) c3 <- rnorm(N, mean = 3.25, sd = 0.4)  t1 <- rnorm(N, mean = 3.5, sd = 0.5) t2 <- rnorm(N, mean = 2.5, sd = 0.6) t3 <- rnorm(N, mean = 3, sd = 0.75) t4 <- rnorm(N, mean = 3.5, sd = 0.75) t5 <- rnorm(N, mean = 3.25, sd = 0.4) t6 <- rnorm(N, mean = 3.25, sd = 0.4)  # Add a `gender` column for coloring the data. gender <- c(rep(\"Male\", N / 2), rep(\"Female\", N / 2))  # Add an `id` column for paired data plotting. id <- 1:N  # Combine samples and gender into a DataFrame. df <- tibble::tibble(   `Control 1` = c1, `Control 2` = c2, `Control 3` = c3,   `Test 1` = t1, `Test 2` = t2, `Test 3` = t3, `Test 4` = t4, `Test 5` = t5, `Test 6` = t6,   Gender = gender, ID = id )  df <- df %>%   tidyr::gather(key = Group, value = Measurement, -ID, -Gender) knitr::kable(head(df))"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"loading-data-step-1","dir":"Articles","previous_headings":"","what":"Loading Data (Step 1)","title":"Tutorial: Basics","text":"create estimation plots obtain confidence intervals effect sizes, need load data relevant groups. simply supply DataFrame load() along x y - columns DataFrame contains treatment groups measurement values respectively. also must supply two groups want compare idx argument vector list. Printing dabestr object gives gentle greeting, well comparisons can computed.","code":"two_groups_unpaired <- load(df,   x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\") ) print(two_groups_unpaired) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps."},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"changing-statistical-parameters","dir":"Articles","previous_headings":"Loading Data (Step 1)","what":"Changing statistical parameters","title":"Tutorial: Basics","text":"can change width confidence interval produced manipulating ci argument.","code":"two_groups_unpaired_ci90 <- load(df,   x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\"), ci = 90 ) print(two_groups_unpaired_ci90) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> Effect size(s) with 90% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps."},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"effect-sizes-step-2","dir":"Articles","previous_headings":"","what":"Effect sizes (Step 2)","title":"Tutorial: Basics","text":"dabestr now features range effect sizes: mean difference (mean_diff()) median difference (median_diff()) Cohen’s d (cohens_d()) Hedges’ g (hedges_g()) Cliff’s delta (cliffs_delta()) output load() function, dabest object, passed effect_size() functions parameter. comparison, type effect size reported (, ’s “unpaired mean difference”). confidence interval reported : [confidenceIntervalWidth LowerBound, UpperBound] confidence interval generated bootstrap resampling. See Bootstrap Confidence Intervals details.","code":"two_groups_unpaired.mean_diff <- mean_diff(two_groups_unpaired)  print(two_groups_unpaired.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed."},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"p-values-and-statistical-tests","dir":"Articles","previous_headings":"Effect sizes (Step 2)","what":"P-values and statistical tests","title":"Tutorial: Basics","text":"Permutation P values provided allow analysts satisfy customary requirement scientific journals. DABEST’s provision P values constitute endorsement P values null-hypothesis significance testing (NHST). users need include study, recommend (1) avoid performing NHST, .e. compare P alpha, (2) never refer P values Results text, (3) state Methods section “null-hypothesis significance testing performed; P values provided legacy purposes .”","code":""},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"producing-estimation-plots-step-3","dir":"Articles","previous_headings":"","what":"Producing estimation plots (Step 3)","title":"Tutorial: Basics","text":"produce Gardner-Altman estimation plot, simply use dabest_plot(). can read genesis design inspiration Robust Beautiful Statistical Visualization. dabest_plot() requires one compulsory parameter run: dabest_effectsize_obj obtained effect_size() function. means can quickly create plots different effect sizes easily.  Instead Gardner-Altman plot, can produce Cumming estimation plot setting float_contrast = FALSE dabest_plot() function plot bootstrap effect sizes raw data, also displays mean (gap) ± standard deviation group (vertical ends) gapped lines. design inspired Edward Tufte’s dictum maximise data-ink ratio.  dabestr package also implements range estimation plot designs aimed depicting common experimental designs. multi-two-group estimation plot tiles two Cumming plots horizontally, created passing nested list idx load() first invoked. Thus, lower axes Cumming plot effectively forest plot, used meta-analyses aggregate compare data different experiments.  shared control plot displays another common experimental paradigm, several test samples compared common reference sample. type Cumming plot automatically generated vector passed idx two data columns.  dabestr thus empowers robustly perform elegantly present complex visualizations statistics.","code":"dabest_plot(two_groups_unpaired.mean_diff) # dabest_plot(two_groups_unpaired.hedges_g) dabest_plot(two_groups_unpaired.mean_diff,   float_contrast = FALSE,   contrast_ylim = c(-0.3, 1.3) ) multi_2group <- load(df,   x = Group, y = Measurement,   idx = list(     c(\"Control 1\", \"Test 1\"),     c(\"Control 2\", \"Test 2\")   ) ) multi_2group %>%   mean_diff() %>%   dabest_plot() shared_control <- load(df,   x = Group, y = Measurement,   idx = c(     \"Control 1\", \"Test 1\", \"Test 2\", \"Test 3\",     \"Test 4\", \"Test 5\", \"Test 6\"   ) )  print(shared_control) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #> 2. Test 2 minus Control 1 #> 3. Test 3 minus Control 1 #> 4. Test 4 minus Control 1 #> 5. Test 5 minus Control 1 #> 6. Test 6 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps. shared_control.mean_diff <- mean_diff(shared_control)  print(shared_control.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 2 and Control 1 is -0.286 [95%CI -0.585, 0.046]. #> The p-value of the two-sided permutation t-test is 0.1022, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 3 and Control 1 is 0.007 [95%CI -0.323, 0.383]. #> The p-value of the two-sided permutation t-test is 0.7381, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 4 and Control 1 is 0.543 [95%CI 0.073, 0.997]. #> The p-value of the two-sided permutation t-test is 0.1493, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 5 and Control 1 is 0.121 [95%CI -0.082, 0.335]. #> The p-value of the two-sided permutation t-test is 0.3141, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 6 and Control 1 is 0.248 [95%CI 0.024, 0.493]. #> The p-value of the two-sided permutation t-test is 0.0524, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. dabest_plot(shared_control.mean_diff) multi_groups <- load(df,   x = Group, y = Measurement,   idx = list(     c(\"Control 1\", \"Test 1\"),     c(\"Control 2\", \"Test 2\", \"Test 3\"),     c(\"Control 3\", \"Test 4\", \"Test 5\", \"Test 6\")   ) )  print(multi_groups) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #> 2. Test 2 minus Control 2 #> 3. Test 3 minus Control 2 #> 4. Test 4 minus Control 3 #> 5. Test 5 minus Control 3 #> 6. Test 6 minus Control 3 #>  #> 5000 resamples will be used to generate the effect size bootstraps. multi_groups.mean_diff <- mean_diff(multi_groups)  print(multi_groups.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 2 and Control 2 is -1.058 [95%CI -1.52, -0.577]. #> The p-value of the two-sided permutation t-test is 0.0001, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 3 and Control 2 is -0.765 [95%CI -1.236, -0.252]. #> The p-value of the two-sided permutation t-test is 0.0056, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 4 and Control 3 is 0.282 [95%CI -0.188, 0.771]. #> The p-value of the two-sided permutation t-test is 0.3547, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 5 and Control 3 is -0.14 [95%CI -0.402, 0.156]. #> The p-value of the two-sided permutation t-test is 0.1826, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 6 and Control 3 is -0.014 [95%CI -0.284, 0.294]. #> The p-value of the two-sided permutation t-test is 0.6205, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. dabest_plot(multi_groups.mean_diff)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_basics.html","id":"using-wide-datasets","dir":"Articles","previous_headings":"","what":"Using wide datasets","title":"Tutorial: Basics","text":"dabestr currently support use ‘wide’ data. convert datasets ‘wide’ ‘long’/‘tidy’, consider taking look gather() part tidyr package.","code":""},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"create-dataset-for-demo","dir":"Articles","previous_headings":"","what":"Create dataset for demo","title":"Tutorial: Delta-Delta","text":"","code":"set.seed(12345) # Fix the seed so the results are replicable. # pop_size = 10000 # Size of each population. N <- 20 # The number of samples taken from each population  # Create samples placebo <- rnorm(N / 2, mean = 4, sd = 0.4) placebo <- c(placebo, rnorm(N / 2, mean = 2.8, sd = 0.4)) drug <- rnorm(N / 2, mean = 3, sd = 0.4) drug <- c(drug, rnorm(N / 2, mean = 2.5, sd = 0.4))  # Add a `Genotype` column as the second variable genotype <- c(rep(\"M\", N / 2), rep(\"W\", N / 2))  # Add an `id` column for paired data plotting. id <- 1:N  # Add a `Rep` column as the first variable for the 2 replicates of experiments done Rep <- rep(c(\"Rep1\", \"Rep2\"), N / 2)  # Combine all columns into a DataFrame. df <- tibble::tibble(   Placebo = placebo,   Drug = drug,   Genotype = genotype,   ID = id,   Rep = Rep )  df <- df %>%   tidyr::gather(key = Treatment, value = Measurement, -ID, -Genotype, -Rep) knitr::kable(head(df))"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Tutorial: Delta-Delta","text":"make delta-delta plot, need simply set delta2 = TRUE load() function. colour used determine colour dots scattered plots colour lines slopegraphs. experiment input used specify grouping data. delta-delta plots, idx non-compulsory input.","code":""},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"unpaired-data","dir":"Articles","previous_headings":"","what":"Unpaired Data","title":"Tutorial: Delta-Delta","text":"function creates following dabest object: can quickly check effect sizes:  plot, horizontal axis represents Genotype condition dot colour also specified Genotype. left pair scattered plots based Placebo group right pair based Drug group. bottom left axis contains two primary deltas: Placebo delta Drug delta. can easily see placebo administered, mutant phenotype around 1.23 [95%CI 0.948, 1.52]. difference shrunken around 0.326 [95%CI 0.0934, 0.584] drug administered. gives us indication drug effective amiliorating disease phenotype. Since Drug completely eliminate mutant phenotype, calculate much net effect drug . delta-delta comes . use Placebo delta reference much mutant phenotype supposed , subtract Drug delta . bootstrapped mean differences (delta-delta) Placebo Drug group plotted right bottom separate y-axis bootstrap plots. effect size, -0.903 [95%CI -1.28, -0.513], net effect size drug treatment. say treatment drug reduced disease phenotype 0.903. Mean difference mutants wild types given placebo treatment : \\[\\Delta_1 = \\bar{X}_{P,M}-\\bar{X}_{P,W}\\] Mean difference mutants wild types given drug treatment : \\[\\Delta_2 = \\bar{X}_{D,M}-\\bar{X}_{D,W}\\] net effect drug mutants : \\[\\Delta_\\Delta = \\Delta_1 - \\Delta_2\\] \\(\\bar{X}\\) sample mean, \\(\\Delta\\) mean difference.","code":"unpaired_delta2 <- load(df,   x = Genotype, y = Measurement,   experiment = Treatment, colour = Genotype,   delta2 = TRUE ) print(unpaired_delta2) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. M Placebo minus W Placebo #> 2. M Drug minus W Drug #> 3. Drug minus Placebo (only for mean difference) #>  #> 5000 resamples will be used to generate the effect size bootstraps. unpaired_delta2.mean_diff <- mean_diff(unpaired_delta2)  print(unpaired_delta2.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between M Placebo and W Placebo is 1.032 [95%CI 0.731, 1.279]. #> The p-value of the two-sided permutation t-test is 0.0000, calculated for legacy purposes only. #>  #> The unpaired mean difference between M Drug and W Drug is 0.244 [95%CI -0.136, 0.666]. #> The p-value of the two-sided permutation t-test is 0.3527, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. dabest_plot(unpaired_delta2.mean_diff)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"specifying-grouping-for-comparisons","dir":"Articles","previous_headings":"","what":"Specifying Grouping for Comparisons","title":"Tutorial: Delta-Delta","text":"example , used convention “test - control’ can manipulate orders experiment groups well horizontal axis variable setting experiment_label x1_level.","code":"unpaired_delta2_specified.mean_diff <- load(df,   x = Genotype, y = Measurement,   experiment = Treatment, colour = Genotype,   delta2 = TRUE,   experiment_label = c(\"Drug\", \"Placebo\"),   x1_level = c(\"M\", \"W\") ) %>%   mean_diff()  dabest_plot(unpaired_delta2_specified.mean_diff)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"paired-data","dir":"Articles","previous_headings":"","what":"Paired Data","title":"Tutorial: Delta-Delta","text":"delta - delta function also supports paired data, useful us visualise data alternate way. Assuming placebo drug treatment done subjects, data paired treatment conditions. can specify using Treatment x Genotype experiment, specify id_col ID, linking data subject . Since done two replicates experiments, can also colour slope lines according Rep. Although idx non-compulsory parameter, still possible input adjust order opposed using experiment_label x1_level.  see drug non-specific effect -0.125 [95%CI -0.486 , 0.214] wild type subjects even sick, bigger effect -0.913 [95%CI -1.24 , -0.577] mutant subjects. visualisation, can see delta-delta value -0.789 [95%CI -1.3 , -0.317] net effect drug accounting non-specific actions healthy individuals Mean difference drug placebo treatments wild type subjects : \\[\\Delta_1 = \\bar{X}_{D,M}-\\bar{X}_{P,W}\\] Mean difference drug placebo treatments mutant subjects : \\[\\Delta_2 = \\bar{X}_{D,M}-\\bar{X}_{P,W}\\] net effect drug mutants : \\[\\Delta_\\Delta = \\Delta_2 - \\Delta_1\\] \\(\\bar{X}\\) sample mean, \\(\\Delta\\) mean difference.","code":"paired_delta2.mean_diff <- load(df,   x = Treatment, y = Measurement,   experiment = Genotype, colour = Rep,   delta2 = TRUE,   idx = list(     c(\"Placebo W\", \"Drug W\"),     c(\"Placebo M\", \"Drug M\")   ),   paired = \"baseline\", id_col = ID ) %>%   mean_diff()  dabest_plot(paired_delta2.mean_diff,   raw_marker_size = 0.5, raw_marker_alpha = 0.3 )"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"connection-to-anova","dir":"Articles","previous_headings":"","what":"Connection to ANOVA","title":"Tutorial: Delta-Delta","text":"configuration comparison performed reminiscent two-way ANOVA. fact, delta - delta effect size estimated interaction term Treatment Genotype. Main effects Treatment Genotype, hand, can determined simpler, univariate contrast plots.","code":""},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"omitting-delta-delta-plot","dir":"Articles","previous_headings":"","what":"Omitting Delta-delta Plot","title":"Tutorial: Delta-Delta","text":"reason don’t want display delta-delta plot, can easily ","code":"dabest_plot(unpaired_delta2.mean_diff, show_delta2 = FALSE)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"other-effect-sizes","dir":"Articles","previous_headings":"","what":"Other Effect Sizes","title":"Tutorial: Delta-Delta","text":"Since delta-delta function applicable mean differences, plots effect sizes include delta-delta bootstrap plot.","code":"# cohens_d(unpaired_delta2)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html","id":"statistics","dir":"Articles","previous_headings":"","what":"Statistics","title":"Tutorial: Delta-Delta","text":"can find outputs delta - delta calculation assessing column named boot_result dabest_effectsize_obj. want extract permutations, permutation test’s p values, statistical tests p value results, can access columns permutation_test_results, pval_permtest, pval_for_tests pvalues respectively. P values permutation tests pval_permtest (permutation calculations results accessed running commented session). representative p value statistical tests (pval_for_tests) Statistical test results pvalues.","code":"print(unpaired_delta2.mean_diff$boot_result) #> # A tibble: 3 × 11 #>   control_group   test_group bootstraps nboots bca_ci_low bca_ci_high pct_ci_low #>   <chr>           <chr>      <list>      <int>      <dbl>       <dbl>      <dbl> #> 1 W Placebo       M Placebo  <dbl>        5000      0.731       1.28       0.748 #> 2 W Drug          M Drug     <dbl>        5000     -0.136       0.666     -0.151 #> 3 Delta2 Overall… Delta2 Ov… <dbl>        5000     -1.20       -0.337     -0.799 #> # ℹ 4 more variables: pct_ci_high <dbl>, ci <dbl>, difference <dbl>, #> #   weight <dbl> # print(unpaired_delta2.mean_diff$permtest_pvals$permutation_test_results) print(unpaired_delta2.mean_diff$permtest_pvals$pval_permtest) #> [1] 0.0000 0.2728 print(unpaired_delta2.mean_diff$permtest_pvals$pval_for_tests) #> $pvalue_wilcoxon #> [1] 2.165018e-05 #>  #> $pvalue_wilcoxon #> [1] 0.3526814 print(unpaired_delta2.mean_diff$permtest_pvals$pvalues) #> [[1]] #> [[1]]$pvalue_wilcoxon #> [1] 2.165018e-05 #>  #> [[1]]$wilcoxon #>  #>  Wilcoxon rank sum exact test #>  #> data:  control and test #> W = 1, p-value = 2.165e-05 #> alternative hypothesis: true location shift is not equal to 0 #>  #>  #> [[1]]$statistic_wilcoxon #> W  #> 1  #>  #> [[1]]$paired_t #>  #>  Paired t-test #>  #> data:  control and test #> t = -6.1826, df = 9, p-value = 0.0001622 #> alternative hypothesis: true mean difference is not equal to 0 #> 95 percent confidence interval: #>  -1.4101885 -0.6546739 #> sample estimates: #> mean difference  #>       -1.032431  #>  #>  #> [[1]]$pvalue_paired_students_t #> [1] 0.0001622227 #>  #> [[1]]$statistic_paired_students_t #>         t  #> -6.182598  #>  #>  #> [[2]] #> [[2]]$pvalue_wilcoxon #> [1] 0.3526814 #>  #> [[2]]$wilcoxon #>  #>  Wilcoxon rank sum exact test #>  #> data:  control and test #> W = 37, p-value = 0.3527 #> alternative hypothesis: true location shift is not equal to 0 #>  #>  #> [[2]]$statistic_wilcoxon #>  W  #> 37  #>  #> [[2]]$paired_t #>  #>  Paired t-test #>  #> data:  control and test #> t = -1.1419, df = 9, p-value = 0.283 #> alternative hypothesis: true mean difference is not equal to 0 #> 95 percent confidence interval: #>  -0.7262822  0.2390283 #> sample estimates: #> mean difference  #>       -0.243627  #>  #>  #> [[2]]$pvalue_paired_students_t #> [1] 0.2829828 #>  #> [[2]]$statistic_paired_students_t #>         t  #> -1.141855"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_minimeta.html","id":"create-dataset-for-demo","dir":"Articles","previous_headings":"","what":"Create dataset for demo","title":"Tutorial: Mini-Meta Delta","text":"now 3 Control 3 Test groups, simulating 3 replicates experiment. dataset also non-numerical column indicating gender, another column indicating identity observation. known ‘long’ dataset. See writeup details.","code":"set.seed(12345) # Fix the seed so the results are replicable. # pop_size = 10000 # Size of each population. N <- 20 # The number of samples taken from each population  # Create samples c1 <- rnorm(N, mean = 3, sd = 0.4) c2 <- rnorm(N, mean = 3.5, sd = 0.75) c3 <- rnorm(N, mean = 3.25, sd = 0.4)  t1 <- rnorm(N, mean = 3.5, sd = 0.5) t2 <- rnorm(N, mean = 2.5, sd = 0.6) t3 <- rnorm(N, mean = 3, sd = 0.75)  # Add a `gender` column for coloring the data. gender <- c(rep(\"Male\", N / 2), rep(\"Female\", N / 2))  # Add an `id` column for paired data plotting. id <- 1:N  # Combine samples and gender into a DataFrame. df <- tibble::tibble(   `Control 1` = c1, `Control 2` = c2, `Control 3` = c3,   `Test 1` = t1, `Test 2` = t2, `Test 3` = t3,   Gender = gender, ID = id )  df <- df %>%   tidyr::gather(key = Group, value = Measurement, -ID, -Gender) knitr::kable(head(df))"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_minimeta.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Tutorial: Mini-Meta Delta","text":"Next, load data normally using load(). time, however, also specify argument minimeta = TRUE loading three experiments’ worth data, idx passed list vectors, follows: dabest object printed, show effect sizes calculated group, well weighted delta. Note weighted delta calculated mean difference. applying mean_diff() function dabest object, can view mean differences group well weighted delta printing dabest_effectsize_obj. can view details experiment accessing dabest_effectsize_obj$boot_results, follows. also contains details weighted delta.","code":"unpaired <- load(df,   x = Group, y = Measurement,   idx = list(     c(\"Control 1\", \"Test 1\"),     c(\"Control 2\", \"Test 2\"),     c(\"Control 3\", \"Test 3\")   ),   minimeta = TRUE ) print(unpaired) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #> 2. Test 2 minus Control 2 #> 3. Test 3 minus Control 3 #> 4. weighted delta (only for mean difference) #>  #> 5000 resamples will be used to generate the effect size bootstraps. unpaired.mean_diff <- mean_diff(unpaired)  print(unpaired.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 2 and Control 2 is -1.058 [95%CI -1.52, -0.577]. #> The p-value of the two-sided permutation t-test is 0.0001, calculated for legacy purposes only. #>  #> The unpaired mean difference between Test 3 and Control 3 is -0.254 [95%CI -0.626, 0.169]. #> The p-value of the two-sided permutation t-test is 0.1081, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. unpaired.mean_diff$boot_result #> # A tibble: 4 × 11 #>   control_group   test_group bootstraps nboots bca_ci_low bca_ci_high pct_ci_low #>   <chr>           <chr>      <list>      <int>      <dbl>       <dbl>      <dbl> #> 1 Control 1       Test 1     <dbl>        5000      0.307       0.869     0.302  #> 2 Control 2       Test 2     <dbl>        5000     -1.52       -0.577    -1.52   #> 3 Control 3       Test 3     <dbl>        5000     -0.626       0.169    -0.645  #> 4 Minimeta Overa… Minimeta … <dbl>        5000     -0.186       0.238     0.0355 #> # ℹ 4 more variables: pct_ci_high <dbl>, ci <dbl>, difference <dbl>, #> #   weight <dbl>"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_minimeta.html","id":"unpaired-data","dir":"Articles","previous_headings":"","what":"Unpaired Data","title":"Tutorial: Mini-Meta Delta","text":"Simply using dabest_plot() function produce Cumming estimation plot showing data experimental replicate well calculated weighted delta.  can also hide weighted delta passing argument show_mini_meta = FALSE. case, resulting graph identical multiple two-groups plot:","code":"dabest_plot(unpaired.mean_diff) dabest_plot(unpaired.mean_diff, show_mini_meta = FALSE)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_minimeta.html","id":"paired-data","dir":"Articles","previous_headings":"","what":"Paired Data","title":"Tutorial: Mini-Meta Delta","text":"tutorial point dealt unpaired data. data paired data, process loading, plotting accessing data unpaired data, except argument paired = \"sequential\" paired = \"baseline\" appropriate id_col passed load() step, follows:","code":"paired.mean_diff <- load(df,   x = Group, y = Measurement,   idx = list(     c(\"Control 1\", \"Test 1\"),     c(\"Control 2\", \"Test 2\"),     c(\"Control 3\", \"Test 3\")   ),   paired = \"baseline\", id_col = ID,   minimeta = TRUE ) %>%   mean_diff()  dabest_plot(paired.mean_diff, raw_marker_size = 0.5, raw_marker_alpha = 0.3)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_proportion_plots.html","id":"create-dataset-for-demo","dir":"Articles","previous_headings":"","what":"Create dataset for demo","title":"Tutorial: Proportion Plots","text":"","code":"set.seed(12345) # Fix the seed so the results are replicable. N <- 40 # The number of samples taken from each population  # Create samples size <- 1 c1 <- rbinom(N, size, prob = 0.2) c2 <- rbinom(N, size, prob = 0.2) c3 <- rbinom(N, size, prob = 0.8)  t1 <- rbinom(N, size, prob = 0.35) t2 <- rbinom(N, size, prob = 0.2) t3 <- rbinom(N, size, prob = 0.3) t4 <- rbinom(N, size, prob = 0.4) t5 <- rbinom(N, size, prob = 0.5) t6 <- rbinom(N, size, prob = 0.6) t7 <- c(rep(1, N))  # Add a `gender` column for coloring the data. gender <- c(rep(\"Male\", N / 2), rep(\"Female\", N / 2))  # Add an `id` column for paired data plotting. id <- 1:N  # Combine samples and gender into a DataFrame. df <- tibble::tibble(   `Control 1` = c1, `Control 2` = c2, `Control 3` = c3,   `Test 1` = t1, `Test 2` = t2, `Test 3` = t3, `Test 4` = t4, `Test 5` = t5,   `Test 6` = t6, `Test 7` = t7,   Gender = gender, ID = id )  df <- df %>%   tidyr::gather(key = Group, value = Success, -ID, -Gender) knitr::kable(head(df))"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_proportion_plots.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Tutorial: Proportion Plots","text":"loading data, specify proportional = TRUE.","code":"two_groups_unpaired <- load(df,   x = Group, y = Success,   idx = c(\"Control 1\", \"Test 1\"),   proportional = TRUE )  print(two_groups_unpaired) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps."},{"path":"https://acclab.github.io/dabestr/articles/tutorial_proportion_plots.html","id":"effect-sizes","dir":"Articles","previous_headings":"","what":"Effect sizes","title":"Tutorial: Proportion Plots","text":"proportion plot, dabest features two effect sizes: mean difference (mean_diff()) Cohen’s h (cohens_h()) output load() function, dabest object, passed effect_size() functions parameter. Let’s compute Cohen’s h comparison.","code":"two_groups_unpaired.mean_diff <- mean_diff(two_groups_unpaired)  print(two_groups_unpaired.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between Test 1 and Control 1 is 0.35 [95%CI 0.15, 0.55]. #> The p-value of the two-sided permutation t-test is 0.0037, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. two_groups_unpaired.cohens_h <- cohens_h(two_groups_unpaired)  print(two_groups_unpaired.cohens_h) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> The unpaired Cohen's h between Test 1 and Control 1 is 0.758 [95%CI 0.311, 1.217]. #> The p-value of the two-sided permutation t-test is 0.0037, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed."},{"path":"https://acclab.github.io/dabestr/articles/tutorial_proportion_plots.html","id":"producing-unpaired-proportional-plots","dir":"Articles","previous_headings":"","what":"Producing Unpaired Proportional Plots","title":"Tutorial: Proportion Plots","text":"produce Gardner-Altman estimation plot, simply use dabest_plot(). dabest_plot() requires one compulsory parameter run: dabest_effectsize_obj obtained effect_size() function. means can quickly create plots different effect sizes easily.   white part bar represents proportion observations dataset belong category, equivalent proportion 0 data. colored part, hand, represents proportion observations belong category, equivalent proportion 1 data. error bars plot display mean ± standard deviation group gapped lines. gap represents mean, vertical ends represent standard deviation. default, bootstrap effect sizes plotted right axis. Instead Gardner-Altman plot, can produce Cumming estimation plot setting float_contrast = FALSE dabest_plot() function. plot bootstrap effect sizes raw data.  can also modify width bars expect setting raw_bar_width dabest_plot() function.  swarm_label contrast_label can used set labels y-axis bar plot contrast plot.","code":"dabest_plot(two_groups_unpaired.mean_diff) dabest_plot(two_groups_unpaired.cohens_h) dabest_plot(two_groups_unpaired.mean_diff, float_contrast = FALSE) dabest_plot(two_groups_unpaired.mean_diff, raw_bar_width = 0.15) dabest_plot(two_groups_unpaired.mean_diff,   swarm_label = \"success\", contrast_label = \"difference\" )"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_proportion_plots.html","id":"producing-paired-proportion-plots","dir":"Articles","previous_headings":"","what":"Producing Paired Proportion Plots","title":"Tutorial: Proportion Plots","text":"paired version proportional plot, adapt style Sankey Diagram. width bar xticks represent proportion corresponding label group, strip denotes paired relationship observation. Similar unpaired version, dabest_plot() function used produce Gardner-Altman estimation plot, difference paired parameter set either “baseline” “sequential” loading data.  paired proportional plot also supports float_contrast parameter, can set FALSE produce Cumming estimation plot.  upper part (grey part) bar represents proportion observations dataset belong category, equivalent proportion 0 data. lower part, hand, represents proportion observations belong category, success, equivalent proportion 1 data. Repeated measures also supported paired proportional plot, changing paired parameter, two types plot can produced. default, raw data plot (upper part) “baseline” “sequential” repeated measures , difference lower part. detailed information repeated measures, please refer vignette(\"tutorial_repeated_measures\").   want specify order groups, can use idx parameter load() function. groups compared together, can put groups idx parameter load() function singular vector/non-nested list.","code":"two_groups_baseline.mean_diff <- load(df,   x = Group, y = Success,   idx = c(\"Control 1\", \"Test 1\"),   proportional = TRUE,   paired = \"baseline\", id_col = ID ) %>%   mean_diff()  dabest_plot(two_groups_baseline.mean_diff) dabest_plot(two_groups_baseline.mean_diff, float_contrast = FALSE) multi_group_baseline.mean_diff <- load(df,   x = Group, y = Success,   idx = list(     c(       \"Control 1\", \"Test 1\",       \"Test 2\", \"Test 3\"     ),     c(       \"Test 4\", \"Test 5\",       \"Test 6\"     )   ),   proportional = TRUE,   paired = \"baseline\", id_col = ID ) %>%   mean_diff()  dabest_plot(multi_group_baseline.mean_diff,   swarm_y_text = 11, contrast_y_text = 11 ) multi_group_sequential.mean_diff <- load(df,   x = Group, y = Success,   idx = list(     c(       \"Control 1\", \"Test 1\",       \"Test 2\", \"Test 3\"     ),     c(       \"Test 4\", \"Test 5\",       \"Test 6\"     )   ),   proportional = TRUE,   paired = \"sequential\", id_col = ID ) %>%   mean_diff()  dabest_plot(multi_group_sequential.mean_diff,   swarm_y_text = 11, contrast_y_text = 11 ) multi_group_baseline_specify.mean_diff <- load(df,   x = Group, y = Success,   idx = c(     \"Control 1\", \"Test 1\",     \"Test 2\", \"Test 3\",     \"Test 4\", \"Test 5\",     \"Test 6\"   ),   proportional = TRUE,   paired = \"baseline\", id_col = ID ) %>%   mean_diff()  dabest_plot(multi_group_baseline_specify.mean_diff,   swarm_y_text = 11, contrast_y_text = 11 )"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_proportion_plots.html","id":"adjustment-parameters","dir":"Articles","previous_headings":"Producing Paired Proportion Plots","what":"Adjustment parameters","title":"Tutorial: Proportion Plots","text":"changing sankey flow parameter, can produce different types paired proportional plot. default, sankey flow set TRUE cater need repeated measures. sankey set FALSE, DABEST generate bar plot similar aesthetic paired proportional plot. flow set FALSE, group comparison form sankey diagram connect groups comparison.","code":"separate_control.mean_diff <- load(df,   x = Group, y = Success,   idx = list(     c(\"Control 1\", \"Test 1\"),     c(\"Test 2\", \"Test 3\"),     c(\"Test 4\", \"Test 5\", \"Test 6\")   ),   proportional = TRUE,   paired = \"sequential\", id_col = ID ) %>%   mean_diff()  dabest_plot(separate_control.mean_diff, swarm_y_text = 11, contrast_y_text = 11) dabest_plot(separate_control.mean_diff,   swarm_y_text = 11, contrast_y_text = 11,   sankey = FALSE ) dabest_plot(separate_control.mean_diff,   swarm_y_text = 11, contrast_y_text = 11,   flow = FALSE )"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_repeated_measures.html","id":"create-dataset-for-demo","dir":"Articles","previous_headings":"","what":"Create dataset for demo","title":"Tutorial: Repeated Measures","text":"","code":"set.seed(12345) # Fix the seed so the results are replicable. # pop_size = 10000 # Size of each population. N <- 20 # The number of samples taken from each population  # Create samples c1 <- rnorm(N, mean = 3, sd = 0.4) c2 <- rnorm(N, mean = 3.5, sd = 0.75) c3 <- rnorm(N, mean = 3.25, sd = 0.4)  t1 <- rnorm(N, mean = 3.5, sd = 0.5) t2 <- rnorm(N, mean = 2.5, sd = 0.6) t3 <- rnorm(N, mean = 3, sd = 0.75) t4 <- rnorm(N, mean = 3.5, sd = 0.75) t5 <- rnorm(N, mean = 3.25, sd = 0.4) t6 <- rnorm(N, mean = 3.25, sd = 0.4)  # Add a `gender` column for coloring the data. gender <- c(rep(\"Male\", N / 2), rep(\"Female\", N / 2))  # Add an `id` column for paired data plotting. id <- 1:N  # Combine samples and gender into a DataFrame. df <- tibble::tibble(   `Control 1` = c1, `Control 2` = c2, `Control 3` = c3,   `Test 1` = t1, `Test 2` = t2, `Test 3` = t3, `Test 4` = t4, `Test 5` = t5, `Test 6` = t6,   Gender = gender, ID = id )  df <- df %>%   tidyr::gather(key = Group, value = Measurement, -ID, -Gender)"},{"path":"https://acclab.github.io/dabestr/articles/tutorial_repeated_measures.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Tutorial: Repeated Measures","text":"2 paired data groups involved, assigning either “baseline” “sequential” paired give numerical results. paired data, use slopegraphs (another innovation Edward Tufte) connect paired observations. Gardner-Altman Cumming plots support .     can also create repeated-measures plots multiple test groups. case, declaring paired “sequential” “baseline” generate slopegraph, reflecting repeated-measures experimental design, different contrast plots, show “sequential” “baseline” comparison:   unpaired data, dabestr empowers perform complex visualizations statistics paired data well.","code":"two_groups_paired_sequential <- load(df,   x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\"),   paired = \"sequential\", id_col = ID )  print(two_groups_paired_sequential) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> Paired effect size(s) for the sequential design of repeated-measures experiment  #> with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps. two_groups_paired_baseline <- load(df,   x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\"),   paired = \"baseline\", id_col = ID )  print(two_groups_paired_baseline) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> Paired effect size(s) for repeated measures against baseline  #> with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps. two_groups_paired_sequential.mean_diff <- mean_diff(two_groups_paired_sequential) two_groups_paired_baseline.mean_diff <- mean_diff(two_groups_paired_baseline) print(two_groups_paired_sequential.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> The paired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. print(two_groups_paired_baseline.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:37 AM on Monday October 23, 2023. #>  #> The paired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. dabest_plot(two_groups_paired_sequential.mean_diff,   raw_marker_size = 0.5, raw_marker_alpha = 0.3 ) dabest_plot(two_groups_paired_sequential.mean_diff,   float_contrast = FALSE,   raw_marker_size = 0.5, raw_marker_alpha = 0.3,   contrast_ylim = c(-0.3, 1.3) ) dabest_plot(two_groups_paired_baseline.mean_diff,   raw_marker_size = 0.5, raw_marker_alpha = 0.3 ) dabest_plot(two_groups_paired_baseline.mean_diff,   float_contrast = FALSE,   raw_marker_size = 0.5, raw_marker_alpha = 0.3,   contrast_ylim = c(-0.3, 1.3) ) sequential_repeated_measures.mean_diff <- load(df,   x = Group, y = Measurement,   idx = c(     \"Control 1\", \"Test 1\",     \"Test 2\", \"Test 3\"   ),   paired = \"sequential\", id_col = ID ) %>%   mean_diff()  print(sequential_repeated_measures.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:38 AM on Monday October 23, 2023. #>  #> The paired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> The paired mean difference between Test 2 and Test 1 is -0.871 [95%CI -1.244, -0.489]. #> The p-value of the two-sided permutation t-test is 0.0002, calculated for legacy purposes only. #>  #> The paired mean difference between Test 3 and Test 2 is 0.293 [95%CI -0.136, 0.713]. #> The p-value of the two-sided permutation t-test is 0.2211, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. dabest_plot(sequential_repeated_measures.mean_diff,   raw_marker_size = 0.5, raw_marker_alpha = 0.3 ) baseline_repeated_measures.mean_diff <- load(df,   x = Group, y = Measurement,   idx = c(     \"Control 1\", \"Test 1\",     \"Test 2\", \"Test 3\"   ),   paired = \"baseline\", id_col = ID ) %>%   mean_diff()  print(baseline_repeated_measures.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:38 AM on Monday October 23, 2023. #>  #> The paired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> The paired mean difference between Test 2 and Control 1 is -0.286 [95%CI -0.585, 0.046]. #> The p-value of the two-sided permutation t-test is 0.1022, calculated for legacy purposes only. #>  #> The paired mean difference between Test 3 and Control 1 is 0.007 [95%CI -0.323, 0.383]. #> The p-value of the two-sided permutation t-test is 0.7381, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. dabest_plot(baseline_repeated_measures.mean_diff,   raw_marker_size = 0.5, raw_marker_alpha = 0.3 ) multi_baseline_repeated_measures.mean_diff <- load(df,   x = Group, y = Measurement,   idx = list(     c(       \"Control 1\", \"Test 1\",       \"Test 2\", \"Test 3\"     ),     c(       \"Control 2\", \"Test 4\",       \"Test 5\", \"Test 6\"     )   ),   paired = \"baseline\", id_col = ID ) %>%   mean_diff()  dabest_plot(multi_baseline_repeated_measures.mean_diff,   raw_marker_size = 0.5, raw_marker_alpha = 0.3 )"},{"path":"https://acclab.github.io/dabestr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joses W. Ho. Author. Kah Seng Lian. Author. Zhuoyu Wang. Author. Jun Yang Liao. Author. Felicia Low. Author. Tayfun Tumkaya. Author. Yishan Mai. Maintainer, contributor. Sangyu Xu. Contributor. Hyungwon Choi. Contributor. Adam Claridge-Chang. Contributor. ACCLAB. Copyright holder, funder.","code":""},{"path":"https://acclab.github.io/dabestr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moving beyond P values: Everyday data analysis estimation plots. (2019) Joses Ho, Tayfun Tumkaya, Sameer Aryal, Hyungwon Choi, Adam Claridge-Chang. Nature Methods 2019, 1548-710. doi: https://doi.org/10.1038/s41592-019-0470-3","code":"@Misc{,   title = {Moving beyond P values: Everyday data analysis with estimation plots.},   author = {{Joses Ho} and {Tayfun Tumkaya} and {Sameer Aryal} and {Hyungwon Choi} and {Adam Claridge-Chang}},   year = {2019},   doi = {10.1038/s41592-019-0470-3},   url = {https://www.nature.com/articles/s41592-019-0470-3.epdf?author_access_token=Euy6APITxsYA3huBKOFBvNRgN0jAjWel9jnR3ZoTv0Pr6zJiJ3AA5aH4989gOJS_dajtNr1Wt17D0fh-t4GFcvqwMYN03qb8C33na_UrCUcGrt-Z0J9aPL6TPSbOxIC-pbHWKUDo2XsUOr3hQmlRew%3D%3D}, }"},{"path":"https://acclab.github.io/dabestr/index.html","id":"dabestr-","dir":"","previous_headings":"","what":"Data Analysis using Bootstrap-Coupled Estimation","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"dabestr package Data Analysis using Bootstrap-Coupled ESTimation. Estimation statistics simple framework avoids pitfalls significance testing. uses familiar statistical concepts: means, mean differences, error bars. importantly, focuses effect size one’s experiment/intervention, opposed false dichotomy engendered P values. estimation plot two key features. presents datapoints swarmplot, orders point display underlying distribution. presents effect size bootstrap 95% confidence interval separate aligned axes. DABEST powers estimationstats.com, allowing everyone access high-quality estimation plots.","code":""},{"path":"https://acclab.github.io/dabestr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"","code":"# Install it from CRAN install.packages(\"dabestr\")  # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(repo = \"ACCLAB/dabestr\", ref = \"dev\")"},{"path":"https://acclab.github.io/dabestr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"Please refer official tutorial useful code snippets.","code":"library(dabestr) data(\"non_proportional_data\")  dabest_obj.mean_diff <- load(   data = non_proportional_data,   x = Group,   y = Measurement,   idx = c(\"Control 1\", \"Test 1\") ) %>%   mean_diff()  dabest_plot(dabest_obj.mean_diff, TRUE)"},{"path":"https://acclab.github.io/dabestr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"Moving beyond P values: Everyday data analysis estimation plots Joses Ho, Tayfun Tumkaya, Sameer Aryal, Hyungwon Choi, Adam Claridge-Chang Nature Methods 2019, 1548-7105. 10.1038/s41592-019-0470-3 Paywalled publisher site; Free--view PDF","code":""},{"path":"https://acclab.github.io/dabestr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"Please report bugs Github issue tracker. contributions welcome; please read Guidelines contributing first. also Code Conduct foster inclusive productive space.","code":""},{"path":"https://acclab.github.io/dabestr/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"like thank alpha testers Claridge-Chang lab: Sangyu Xu, Xianyuan Zhang, Farhan Mohammad, Jurga Mituzaitė, Stanislav Ott.","code":""},{"path":"https://acclab.github.io/dabestr/index.html","id":"dabest-in-other-languages","dir":"","previous_headings":"","what":"DABEST in other languages","title":"Data Analysis using Bootstrap-Coupled Estimation","text":"DABEST also available Python (DABEST-python) Matlab (DABEST-Matlab).","code":""},{"path":"https://acclab.github.io/dabestr/reference/dabest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Producing an estimation plot — dabest_plot","title":"Producing an estimation plot — dabest_plot","text":"Produces Gardner-Altman estimation plot Cumming estimation plot depending whether float_contrast TRUE. plot presents datapoints swarmplot, orders point display underlying distribution. also presents effect size bootstrap 95% confidence interval (95% CI) separate aligned axes.","code":""},{"path":"https://acclab.github.io/dabestr/reference/dabest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Producing an estimation plot — dabest_plot","text":"","code":"dabest_plot(dabest_effectsize_obj, float_contrast = TRUE, ...)"},{"path":"https://acclab.github.io/dabestr/reference/dabest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Producing an estimation plot — dabest_plot","text":"dabest_effectsize_obj dabest_effectsize_obj created loading dabest_obj along specified parameters effect_size() function. float_contrast Default TRUE. TRUE, Gardner-Altman plot produced. FALSE, Cumming estimation plot produced. ... Adjustment parameters control adjust appearance plot. (list possible adjustment parameters can found plot_kwargs)","code":""},{"path":"https://acclab.github.io/dabestr/reference/dabest_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Producing an estimation plot — dabest_plot","text":"","code":"# Loading of the dataset data(twogroup_data) #> Warning: data set ‘twogroup_data’ not found  # Preparing the data to be plotted dabest_obj <- load(non_proportional_data,   x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\") ) dabest_obj.mean_diff <- mean_diff(dabest_obj)  # Plotting an estimation plot dabest_plot(dabest_obj.mean_diff, TRUE)"},{"path":"https://acclab.github.io/dabestr/reference/deltadelta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data to produce a delta2 Dabest plot — deltadelta_data","title":"Data to produce a delta2 Dabest plot — deltadelta_data","text":"Contains 2 Genotype groups 2 Treatment groups.","code":""},{"path":"https://acclab.github.io/dabestr/reference/deltadelta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data to produce a delta2 Dabest plot — deltadelta_data","text":"","code":"deltadelta_data"},{"path":"https://acclab.github.io/dabestr/reference/deltadelta_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data to produce a delta2 Dabest plot — deltadelta_data","text":"data frame 40 rows 5 variables: Genotype Genotype observation ID Identity observation Rep Rep observation Treatment treatment method used Measurement Measurement value","code":""},{"path":"https://acclab.github.io/dabestr/reference/deltadelta_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data to produce a delta2 Dabest plot — deltadelta_data","text":"","code":"data(deltadelta_data) # Lazy loading. Data becomes visible as soon as it is loaded"},{"path":"https://acclab.github.io/dabestr/reference/effect_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating effect sizes — effect_size","title":"Calculating effect sizes — effect_size","text":"Computes effect size control-test group pairing idx. resampling bootstrap distribution effect size subjected Bias-corrected accelerated bootstrap (BCa) correction. following effect sizes mean_diff, median_diff, cohens_d, hedges_g cliffs_delta used plot types.","code":""},{"path":"https://acclab.github.io/dabestr/reference/effect_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating effect sizes — effect_size","text":"","code":"mean_diff(dabest_obj, perm_count = 5000)  median_diff(dabest_obj, perm_count = 5000)  cohens_d(dabest_obj, perm_count = 5000)  hedges_g(dabest_obj, perm_count = 5000)  cliffs_delta(dabest_obj, perm_count = 5000)  cohens_h(dabest_obj, perm_count = 5000)"},{"path":"https://acclab.github.io/dabestr/reference/effect_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating effect sizes — effect_size","text":"dabest_obj dabest_obj created loading dataset along specified parameters load() function. perm_count number reshuffles control test labels performed p-value.","code":""},{"path":"https://acclab.github.io/dabestr/reference/effect_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating effect sizes — effect_size","text":"Returns dabest_effectsize_obj list 22 elements. following elements contained within: raw_data tidy dataset passed load() cleaned altered plotting. idx list control-test groupings initially passed load(). delta_x_labels Vector containing labels x-axis delta plot. delta_y_labels String label y-axis delta plot. Ns List labels x-axis raw plot. raw_y_labels Vector containing labels y-axis raw plot. is_paired Boolean value determining paired plot. is_colour Boolean value determining colour column plot. paired Paired (\"sequential\" \"baseline\") initially passed load(). resamples number resamples used generate effect size bootstraps. control_summary Numeric value plotting control summary lines float_contrast = TRUE. test_summary Numeric value plotting control summary lines float_contrast = TRUE. ylim Vector containing y limits raw plot. enquo_x Quosure x initially passed load(). enquo_y Quosure y initially passed load(). enquo_id_col Quosure id_col initially passed load(). enquo_colour Quosure colour initially passed load(). proportional Boolean value initially passed load(). minimeta Boolean value initially passed load(). delta Boolean value initially passed load(). proportional_data List calculations related plotting proportion plots. boot_result List containing values related calculation effect sizes, bootstrapping BCa correction. baseline_ec_boot_result List containing values related calculation effect sizes, bootstrapping BCa correction baseline error curve. permtest_pvals List containing values related calculations permutation t tests corresponding p values, p values different types effect sizes different statistical tests.","code":""},{"path":"https://acclab.github.io/dabestr/reference/effect_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculating effect sizes — effect_size","text":"plot types listed limited use following effect sizes. Proportion plots offers mean_diff cohens_h. Mini-Meta Delta plots offers mean_diff. plots able use given basic effect sizes listed Description.","code":""},{"path":"https://acclab.github.io/dabestr/reference/effect_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating effect sizes — effect_size","text":"","code":"# Loading of the dataset data(non_proportional_data)  # Applying effect size to the dabest object dabest_obj <- load(non_proportional_data,   x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\") ) dabest_obj.mean_diff <- mean_diff(dabest_obj)  # Printing dabest effectsize object print(dabest_obj.mean_diff) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> The unpaired mean difference between Test 1 and Control 1 is 0.585 [95%CI 0.307, 0.869]. #> The p-value of the two-sided permutation t-test is 0.0022, calculated for legacy purposes only. #>  #> 5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated. #> Any p-value reported is the probability of observing the effect size (or greater), #> assuming the null hypothesis of zero difference is true. #> For each p-value, 5000 reshuffles of the control and test labels were performed. #>"},{"path":"https://acclab.github.io/dabestr/reference/load.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading data with dabestr — load","title":"Loading data with dabestr — load","text":"Processes converts tidy dataset dabestr format. output function used input various procedural functions within dabestr create estimation plots.","code":""},{"path":"https://acclab.github.io/dabestr/reference/load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading data with dabestr — load","text":"","code":"load(   data,   x,   y,   idx = NULL,   paired = NULL,   id_col = NULL,   ci = 95,   resamples = 5000,   colour = NULL,   proportional = FALSE,   minimeta = FALSE,   delta2 = FALSE,   experiment = NULL,   experiment_label = NULL,   x1_level = NULL )"},{"path":"https://acclab.github.io/dabestr/reference/load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading data with dabestr — load","text":"data tidy dataframe. x Column data contains treatment groups. y Column data contains measurement values. idx List control-test groupings effect size computed . paired Paired (\"sequential\" \"baseline\"). Used plots experiments repeated-measures designs. \"sequential\", comparison happens measurement one directly preceding . (control vs group ) \"baseline\", comparison happens group shared control. (group vs group +1) id_col Column data indicating identity datapoint data tagged. Compulsory parameter paired TRUE. ci Default 95. Determines range confidence interval effect size bootstrap calculations. accepts values 0 100 (inclusive). resamples number resamples used generate effect size bootstraps. colour Column data determines groupings colour swarmplot opposed x. proportional Boolean value determining proportion plots produced. minimeta Boolean value determining mini-meta analysis conducted. delta2 Boolean value determining delta-delta analysis 2 2 experimental designs conducted. experiment Experiment column name delta-delta analysis. experiment_label String specifying experiment label used distinguish experiment factors (used plotting labels). x1_level String setting first factor level 2 2 experimental design.","code":""},{"path":"https://acclab.github.io/dabestr/reference/load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading data with dabestr — load","text":"Returns dabest_obj list 18 elements. following elements contained within: raw_data tidy dataset passed load() cleaned altered plotting. proportional_data List calculations related plotting proportion plots. enquo_x  Quosure x initially passed load(). enquo_y  Quosure y initially passed load(). enquo_id_col Quosure id_col initially passed load(). enquo_colour Quosure colour initially passed load(). proportional Boolean value determining proportion plots produced. minimeta Boolean value determining mini-meta analysis conducted. delta2 Boolean value determining delta-delta analysis 2 2 experimental designs conducted. idx List control-test groupings effect size computed . resamples number resamples used generate effect size bootstraps. is_paired Boolean value determining paired plot. is_colour Boolean value determining specified colour column plot. paired Paired (\"sequential\" \"baseline\") initially passed load(). ci Numeric value determines range confidence interval effect size bootstrap calculations. accepts values 0 100 (inclusive). Ns List labels x-axis rawdata swarm plot. control_summary Numeric value plotting control summary lines float_contrast= TRUE. test_summary Numeric value plotting test summary lines float_contrast = TRUE. ylim Vector containing y limits rawdata swarm plot.","code":""},{"path":"https://acclab.github.io/dabestr/reference/load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading data with dabestr — load","text":"","code":"# Loading in of the dataset data(non_proportional_data)  # Creating a dabest object dabest_obj <- load(   data = non_proportional_data, x = Group, y = Measurement,   idx = c(\"Control 1\", \"Test 1\") )  # Printing dabest object print(dabest_obj) #> DABESTR v2023.9.12 #> ================== #>  #> Good morning! #> The current time is 02:36 AM on Monday October 23, 2023. #>  #> Effect size(s) with 95% confidence intervals will be computed for: #> 1. Test 1 minus Control 1 #>  #> 5000 resamples will be used to generate the effect size bootstraps. #>"},{"path":"https://acclab.github.io/dabestr/reference/minimeta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data to produce a mini-meta Dabest plot — minimeta_data","title":"Data to produce a mini-meta Dabest plot — minimeta_data","text":"Contains 3 Control Samples 3 Test Samples.","code":""},{"path":"https://acclab.github.io/dabestr/reference/minimeta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data to produce a mini-meta Dabest plot — minimeta_data","text":"","code":"minimeta_data"},{"path":"https://acclab.github.io/dabestr/reference/minimeta_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data to produce a mini-meta Dabest plot — minimeta_data","text":"data frame 120 rows 5 variables: Gender Gender observation ID Identity observation Group control group test Measurement Measurement value","code":""},{"path":"https://acclab.github.io/dabestr/reference/minimeta_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data to produce a mini-meta Dabest plot — minimeta_data","text":"","code":"data(minimeta_data) # Lazy loading. Data becomes visible as soon as it is loaded"},{"path":"https://acclab.github.io/dabestr/reference/non_proportional_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-proportional data for Estimation plots. — non_proportional_data","title":"Non-proportional data for Estimation plots. — non_proportional_data","text":"Contains 3 Control Samples 6 Test Samples.","code":""},{"path":"https://acclab.github.io/dabestr/reference/non_proportional_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-proportional data for Estimation plots. — non_proportional_data","text":"","code":"non_proportional_data"},{"path":"https://acclab.github.io/dabestr/reference/non_proportional_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Non-proportional data for Estimation plots. — non_proportional_data","text":"data frame 180 rows 4 variables: Gender Gender observation ID Identity observation Group control group test Measurement Measurement value","code":""},{"path":"https://acclab.github.io/dabestr/reference/non_proportional_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non-proportional data for Estimation plots. — non_proportional_data","text":"","code":"data(non_proportional_data) # Lazy loading. Data becomes visible as soon as it is loaded"},{"path":"https://acclab.github.io/dabestr/reference/plot_kwargs.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjustable Plot Aesthetics — plot_kwargs","title":"Adjustable Plot Aesthetics — plot_kwargs","text":"available plot kwargs adjusting plot aesthetics estimation plot: swarm_label Default \"value\" \"proportion success\" proportion plots. Label y-axis swarm plot. contrast_label Default \"effect size\", based effect sizes given effect_size(). Label y-axis contrast plot. delta2_label Default NULL. Label y-label delta-delta plot. swarm_x_text Default 11. Numeric value determining font size x-axis swarm plot. swarm_y_text Default 15. Numeric value determining font size y-axis swarm plot. contrast_x_text Default 11. Numeric value determining font size x-axis delta plot. contrast_y_text Default 15. Numeric value determining font size y-axis delta plot. swarm_ylim Default NULL. Vector containing y limits swarm plot contrast_ylim Default NULL. Vector containing y limits delta plot. delta2_ylim Default NULL. Vector containing y limits delta-delta plot. raw_marker_size Default 1.5. Numeric value determining size points used swarm plot. tufte_size Default 0.8. Numeric value determining size tufte line swarm plot. es_marker_size Default 0.5. Numeric value determining size points used delta plot. es_line_size Default 0.8. Numeric value determining size ci line delta plot. raw_marker_alpha Default 1. Numeric value determining transparency points swarm plot. raw_bar_width Default 0.3. Numeric value determining width bar sankey diagram. raw_marker_spread Default 2. distance points swarm plot. raw_marker_side_shift Default 0. horizontal distance swarm plot points moved direction asymmetric_side. asymmetric_side Default \"right\". Can either \"right\" \"left\". Controls side swarm points shown. show_delta2 Default FALSE. Boolean value determining delta-delta plot shown. show_mini_meta Default FALSE. Boolean value determining weighted average plot shown. False, resulting graph identical multiple two-groups plot. show_zero_dot Default TRUE. Boolean value determining dot zero line effect size control-control group. show_baseline_ec Default FALSE. Boolean value determining whether baseline curve shown. sankey Default TRUE. Boolean value determining flows bar charts plotted. raw_flow_alpha Default 0.5. Numeric value determining transparency sankey flows paired proportion plot. flow Default TRUE. Boolean value determining whether bars plotted pairs. custom_palette Default \"d3\". String. following palettes available use: npg, aaas, nejm, lancet, jama, jco, ucscgb, d3, locuszoom, igv, cosmic, uchicago, brewer, ordinal, viridis_d.","code":""},{"path":"https://acclab.github.io/dabestr/reference/proportional_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical Binary data for Proportion Plots — proportional_data","title":"Numerical Binary data for Proportion Plots — proportional_data","text":"Contains 3 Control Samples 7 Test Samples.","code":""},{"path":"https://acclab.github.io/dabestr/reference/proportional_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical Binary data for Proportion Plots — proportional_data","text":"","code":"proportional_data"},{"path":"https://acclab.github.io/dabestr/reference/proportional_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Numerical Binary data for Proportion Plots — proportional_data","text":"data frame 400 rows 4 variables: Gender Gender observation ID Identity observation Group control group test Success 1 (Success) 0 (Failure)","code":""},{"path":"https://acclab.github.io/dabestr/reference/proportional_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numerical Binary data for Proportion Plots — proportional_data","text":"","code":"data(proportional_data) # Lazy loading. Data becomes visible as soon as it is loaded"},{"path":"https://acclab.github.io/dabestr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v2023912","dir":"Changelog","previous_headings":"","what":"dabestr v2023.9.12","title":"dabestr v2023.9.12","text":"CRAN release: 2023-10-13 release complete rebuild dabestr. Previous functions v0.3.0 now depreciated.","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"main-api-2023-9-12","dir":"Changelog","previous_headings":"","what":"Main API","title":"dabestr v2023.9.12","text":"version dabestr features new Main API. following functions sequentially organised intended procedural utilisation. load() processes converts tidy dataset dabestr format. mean_diff(), median_diff(), cohens_d(), hedges_g(), cliffs_delta(), cohens_h() Computes effect size control-test group pairing idx. dabest_plot() produces Gardner-Altman estimation plot Cumming estimation plot depending whether float_contrast TRUE.","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"new-features-2023-9-12","dir":"Changelog","previous_headings":"","what":"New features","title":"dabestr v2023.9.12","text":"Plotting shared control repeated measures Proportion plots (unpaired paired) Mini-Meta Delta plots Delta-Delta plots","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v030","dir":"Changelog","previous_headings":"","what":"dabestr v0.3.0","title":"dabestr v0.3.0","text":"CRAN release: 2020-07-13 breaking release includes standardised effect sizes, bunch bugfixes.","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v025","dir":"Changelog","previous_headings":"","what":"dabestr v0.2.5","title":"dabestr v0.2.5","text":"CRAN release: 2020-04-20 release implements ability supply custom vector colors palette plotting. also bugfix misreported Ns test control group.","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v024","dir":"Changelog","previous_headings":"","what":"dabestr v0.2.4","title":"dabestr v0.2.4","text":"CRAN release: 2020-03-21 version represents resbumission, response automated CRAN check flavor r-patched-solaris-x86. See https://cran.r-project.org/web/checks/check_results_dabestr.html","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v023","dir":"Changelog","previous_headings":"","what":"dabestr v0.2.3","title":"dabestr v0.2.3","text":"CRAN release: 2020-02-11 patch fixes issue prevented Cumming plot generation, due ggplot2 new release (v3.3.0).","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v022","dir":"Changelog","previous_headings":"","what":"dabestr v0.2.2","title":"dabestr v0.2.2","text":"CRAN release: 2019-07-04 patch fixes issue local variables duplicated column names, requiring proper unquoting.","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v021","dir":"Changelog","previous_headings":"","what":"dabestr v0.2.1","title":"dabestr v0.2.1","text":"CRAN release: 2019-06-26 release fixes bug due new version ellipsis. (# 37).","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v020","dir":"Changelog","previous_headings":"","what":"dabestr v0.2.0","title":"dabestr v0.2.0","text":"CRAN release: 2019-01-07 release fixes bug plotted categories alphabetically Gardner-Altman plots. (# 24).","code":""},{"path":"https://acclab.github.io/dabestr/news/index.html","id":"dabestr-v010","dir":"Changelog","previous_headings":"","what":"dabestr v0.1.0","title":"dabestr v0.1.0","text":"CRAN release: 2018-11-19 First release dabestr.","code":""}]
